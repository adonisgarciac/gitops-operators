---
# create one installplan-complete-verifier job per manual operator
apiVersion: batch/v1
kind: Job
metadata:
  name: openshift-operators-redhat-verfier-5-8-0
  namespace: openshift-operators-redhat
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "30"
spec:
  completions: 1
  parallelism: 1
  backoffLimit: 10
  activeDeadlineSeconds: 240
  template:
    spec:
      containers:
      - name: installplan-complete-verifier
        image: registry.redhat.io/openshift4/ose-cli:v4.10@sha256:7804ea66ea8ca0f414148b8b3b52ae454800785e80a32bd8a5eb2db789014a00
        command:
          - /bin/bash
          - -c
          - |
            export HOME=/tmp/approver

            echo
            echo "Get Subscription (${SUBSCRIPTION}) UID"
            subscriptionUID=$(oc get subscriptions.operators.coreos.com --field-selector metadata.name=${SUBSCRIPTION} -o=jsonpath="{.items[0].metadata.uid}")
            echo "Subscription (${SUBSCRIPTION}) UID: ${subscriptionUID}"
            if [ ! -z "subscriptionUID" ]; then
              # this complicated go-template finds an InstallPlan where both the .spec.clusterServiceVersionNames contains the expected CSV
              # and .metadata.ownerReferences contains the expected Subscription owner. JsonPath doesn't let you do and statements and go-templates
              # done seem to have a function for checking if a value is in an array without iterating. so here we are.
              # NOTE 1: if for whatever reason multiple InstallPlans are found that are associated with the Subscription for the correct CSV, only the first will be approved
              # NOTE 2: this is nested in {{` `}} so that helm doesn't try to interpret the go template
              installPlanGoTemplate=$(cat << EOF
              {{- \$installPlanName := "" -}}
              {{- range .items -}}
                {{- \$installPlanItem := . -}}
                {{- range .spec.clusterServiceVersionNames -}}
                  {{- if and (eq . "${SUBSCRIPTION_CSV}") (not \$installPlanName) -}}
                    {{- range \$installPlanItem.metadata.ownerReferences -}}
                      {{- if eq .uid "${subscriptionUID}" -}}
                        {{- \$installPlanName = \$installPlanItem.metadata.name -}}
                      {{- end -}}
                    {{- end -}}
                  {{- end -}}
                {{- end -}}
              {{- end -}}
              {{ \$installPlanName }}
            EOF
              )

              echo
              echo "Get InstallPlan for CSV (${SUBSCRIPTION_CSV}) with Subscription (${SUBSCRIPTION_CSV}) (${subscriptionUID}) owner"
              installPlan=$(oc get installplan -o=go-template="${installPlanGoTemplate}")
              echo "InstallPlan for CSV (${SUBSCRIPTION_CSV}) with Subscription (${SUBSCRIPTION_CSV}) (${subscriptionUID}) owner: ${installPlan}"
              if [ ! -z "${installPlan}" ]; then
                echo
                echo "Check InstallPlan (${installPlan}) phase"
                if installPlanPhase=$(oc get installplan ${installPlan} -o=jsonpath="{.status.phase}"); then
                  if [ "${installPlanPhase}" == "Complete" ]; then
                    echo "InstallPlan (${installPlan}) complete"
                    exit 0
                  else
                    echo "InstallPlan (${installPlan}) not yet complete: ${installPlanPhase}"
                    exit 1
                  fi
                else
                  echo "Failed to look up InstallPlan (${installPlan}) phase"
                  exit 1
                fi
              else
                echo
                echo "Could not find InstallPlan for CSV (${SUBSCRIPTION_CSV}) with Subscription (${SUBSCRIPTION_CSV}) (${subscriptionUID}) owner. This can happen if InstallPlan isn't created yet. Try again."
                exit 1
              fi
            else
              echo
              echo "Failed to get Subscription ($SUBSCRIPTION) UID. This really shouldn't happen."
              exit 1
            fi
        imagePullPolicy: Always
        env:
        - name: SUBSCRIPTION_CSV
          value: loki-operator.v5.8.0
        - name: SUBSCRIPTION
          value: loki-operator
      dnsPolicy: ClusterFirst
      restartPolicy: Never
      serviceAccount: openshift-operators-redhat-approver-sa
      serviceAccountName: openshift-operators-redhat-approver-sa
      terminationGracePeriodSeconds: 30
...